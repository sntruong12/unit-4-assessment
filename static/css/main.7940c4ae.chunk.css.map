{"version":3,"sources":["/Users/sontruong/code/unit-4-assessment/src/index.css","main.7940c4ae.chunk.css","/Users/sontruong/code/unit-4-assessment/src/components/CircleSelector/CircleSelector.css","/Users/sontruong/code/unit-4-assessment/src/components/Circles/Circles.css","/Users/sontruong/code/unit-4-assessment/src/App.css"],"names":[],"mappings":"AAAA,KACE,QAAA,CACA,SAAA,CACA,mICEY,CDCZ,kCAAA,CACA,iCCCF,CDEA,KACE,uECEF,CCbA,gBACE,YAAA,CACA,qBAAA,CACA,4BAAA,CACA,kBAAA,CACA,YAAA,CACA,WAAA,CACA,uBAAA,CACA,iBAAA,CACA,iBDgBF,CCbA,uBACE,WAAA,CACA,WAAA,CACA,uBAAA,CACA,UAAA,CACA,iBAAA,CACA,wBAAA,CACA,cAAA,CACA,YDgBF,CCbA,6BACE,wBDgBF,CCZA,gCACE,qBAAA,CACA,aAAA,CACA,WAAA,CACA,cDgBF,CEhDA,SAEE,kBAAA,CACA,4BAAA,CAEA,YAAA,CACA,WAAA,CACA,wBAAA,CACA,iBFkDF,CE/CA,sBAVE,YAAA,CAGA,kBFoEF,CE7DA,aACE,WAAA,CACA,UAAA,CAEA,sBAAA,CAEA,wBAAA,CACA,UAAA,CACA,cAAA,CACA,wBAAA,CACA,iBAAA,CACA,gBFkDF,CE9CA,sBACE,qBAAA,CACA,YAAA,CACA,uBFkDF,CG/EA,OACE,qBHiFF,CG9EA,KACE,YAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBHiFF,CG9EA,YACE,UAAA,CACA,YAAA,CACA,cAAA,CACA,qBAAA,CACA,UAAA,CACA,iBAAA,CACA,kBHiFF,CG9EA,UACE,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,kBAAA,CACA,QHiFF","file":"main.7940c4ae.chunk.css","sourcesContent":["body {\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n","body {\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n\n.CircleSelector {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 200px;\n  width: 150px;\n  border: 4px solid purple;\n  border-radius: 8px;\n  margin-right: 20px;\n}\n\n.CircleSelector button {\n  height: 30px;\n  width: 125px;\n  background-color: purple;\n  color: white;\n  border-radius: 4px;\n  text-transform: uppercase;\n  cursor: pointer;\n  outline: none;\n}\n\n.CircleSelector button:hover {\n  background-color: limegreen;\n}\n\n/* Adding a class of 'selected' to the selected button dynamically is secret sauce */\n.CircleSelector button.selected {\n  background-color: white;\n  color: limegreen;\n  border: none;\n  cursor: default;\n}\n.Circles {\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-around;\n  align-items: center;\n  height: 200px;\n  width: 200px;\n  border: 4px solid limegreen;\n  border-radius: 8px;\n}\n\n.Circles div {\n  height: 75px;\n  width: 75px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: limegreen;\n  color: white;\n  font-size: 30px;\n  border: 5px solid limegreen;\n  border-radius: 50%;\n  margin: auto 10px;\n}\n\n/* Another dose of dynamic className goodness is the winning ticket */\n.Circles div.selected {\n  background-color: white;\n  color: purple;\n  border: 5px solid purple;\n}\nbody, * {\n  box-sizing: border-box;\n}\n\n.App {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.App-header {\n  width: 100%;\n  padding: 20px;\n  font-size: 24px;\n  background-color: grey;\n  color: white;\n  text-align: center;\n  letter-spacing: 3px;\n}\n\n.App main {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex: 1 1;\n}\n\n",".CircleSelector {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 200px;\n  width: 150px;\n  border: 4px solid purple;\n  border-radius: 8px;\n  margin-right: 20px;\n}\n\n.CircleSelector button {\n  height: 30px;\n  width: 125px;\n  background-color: purple;\n  color: white;\n  border-radius: 4px;\n  text-transform: uppercase;\n  cursor: pointer;\n  outline: none;\n}\n\n.CircleSelector button:hover {\n  background-color: limegreen;\n}\n\n/* Adding a class of 'selected' to the selected button dynamically is secret sauce */\n.CircleSelector button.selected {\n  background-color: white;\n  color: limegreen;\n  border: none;\n  cursor: default;\n}",".Circles {\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-around;\n  align-items: center;\n  height: 200px;\n  width: 200px;\n  border: 4px solid limegreen;\n  border-radius: 8px;\n}\n\n.Circles div {\n  height: 75px;\n  width: 75px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: limegreen;\n  color: white;\n  font-size: 30px;\n  border: 5px solid limegreen;\n  border-radius: 50%;\n  margin: auto 10px;\n}\n\n/* Another dose of dynamic className goodness is the winning ticket */\n.Circles div.selected {\n  background-color: white;\n  color: purple;\n  border: 5px solid purple;\n}","body, * {\n  box-sizing: border-box;\n}\n\n.App {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.App-header {\n  width: 100%;\n  padding: 20px;\n  font-size: 24px;\n  background-color: grey;\n  color: white;\n  text-align: center;\n  letter-spacing: 3px;\n}\n\n.App main {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n}\n"]}